name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  lint-type-test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write         # needed for annotations
      actions: read
      security-events: write       # needed for SARIF upload

    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install project (dev)
        run: |
          python -m pip install --upgrade pip
          # Prefer pyproject optional extra "dev"; fallback to requirements files
          if [ -f pyproject.toml ]; then
            pip install -e ".[dev]" || true
          fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # ---------- Formatting & Linting ----------
      - name: Ruff - format check
        run: ruff format --check .

      - name: Ruff - lint
        run: ruff check . --output-format=github

      # ---------- Type checking ----------
      - name: mypy
        run: mypy --show-error-codes --error-summary --pretty --no-error-summary --hide-error-context --cache-dir .mypy_cache --python-executable `which python` --config-file pyproject.toml --error-format github

      # ---------- Security ----------
      - name: Bandit (security static analysis)
        run: |
          bandit -r app -ll -iii -o bandit.sarif -f sarif || true

      - name: pip-audit (dependency vulnerabilities)
        run: |
          pip-audit -r requirements.txt -f sarif -o pip-audit.sarif || true
          if [ -f requirements-dev.txt ]; then pip-audit -r requirements-dev.txt -f sarif -o pip-audit-dev.sarif || true; fi

      - name: Upload SARIF (security results)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: |
            bandit.sarif
            pip-audit.sarif
            pip-audit-dev.sarif

      # ---------- Tests ----------
      - name: Install test deps (if not already)
        run: |
          python - <<'PY'
          import sys, subprocess
          pkgs = ["pytest", "pytest-cov"]
          subprocess.check_call([sys.executable, "-m", "pip", "install", *pkgs])
          PY

      - name: Run tests
        env:
          PYTHONWARNINGS: default
        run: |
          pytest -q --disable-warnings --maxfail=1 --cov=app --cov-report=term-missing

